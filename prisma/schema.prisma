// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int                     @id @default(autoincrement())
  name                   String
  email                  String                  @unique
  password               String?
  bio                    String?
  authProvider           String?
  shops                  Shop[]
  role                   String                  @default("member") //super_admin , admin , member
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @default(now()) @updatedAt
  ProductRecommendations ProductRecommendation[]
}

model Shop {
  id          Int       @id @default(autoincrement())
  name        String
  address     String?
  owner       User?     @relation(fields: [ownerId], references: [id])
  ownerId     Int?
  photo_url   String?
  products    Product[]
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  products      Product[]
  subCategories SubCategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  products   Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model Product {
  id                     Int                     @id @default(autoincrement())
  name                   String
  description            String
  category               Category?               @relation(fields: [categoryId], references: [id])
  subCategory            SubCategory?            @relation(fields: [subCategoryId], references: [id])
  photos                 Photo[]
  imageLabels            Json?
  categoryId             Int?
  subCategoryId          Int?
  shop                   Shop?                   @relation(fields: [shopId], references: [id])
  shopId                 Int
  price                  Float                   @default(0)
  quantity               Int                     @default(0)
  size                   Int
  unit                   String
  color                  String
  createdAt              DateTime                @default(now())
  updatedAt              DateTime?               @updatedAt
  ProductRecommendations ProductRecommendation[]
}

model ProductRecommendation {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  productId Int
  userId    Int

  @@unique([productId, userId])
}

model Photo {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}
